version: '3'
services:

    rabbitmq:
      container_name: rabbitmq
      image: 'rabbitmq:3-management'
      healthcheck:
        test: rabbitmq-diagnostics -q ping
        interval: 30s
        timeout: 30s
        retries: 3

    djam:
        container_name: djam
        build:
          context: ./
        restart: always
        env_file:
          - .env_docker
#        command: uwsgi  --emperor uwsgi.ini
        # command: uwsgi --ini uwsgi.ini
        ports:
        - "8001:8000"
        volumes:
          - djam_static:/djam/project/static
        environment:
          - DJAM_PROJECT_ENVIRONMENT=dev
          - DJAM_RABBITMQ_HOST=rabbitmq
          - DJAM_RABBITMQ_PORT=5672
          - DJAM_DB_HOST=db
          - DJAM_DB_PORT=5432
          - DJAM_DB_NAME=djam
          - DJAM_DB_USER=djam
          - DJAM_DB_PASSWORD=djam
          - DJAM_STATIC_ROOT=/djam/project/static_root
          - DJAM_EMAIL_HOST_USER=${DJAM_EMAIL_HOST_USER}
          - DJAM_EMAIL_HOST_PASSWORD=${DJAM_EMAIL_HOST_PASSWORD}
          - DJAM_EMAIL_HOST=${DJAM_EMAIL_HOST}
          - DJAM_EMAIL_SENDER=${DJAM_EMAIL_SENDER}
          - DJAM_EMAIL_PORT=${DJAM_EMAIL_PORT}
          - DJAM_SECRET_KEY=${DJAM_SECRET_KEY}
        depends_on:
          rabbitmq:
            condition: service_healthy
          db:
            condition: service_healthy
    db:
      container_name: db
      restart: always
      build:
        context: ./deployment/postgres/
      env_file:
        - .env_docker
      ports:
        - "5432:5432"
      environment:
        POSTGRES_PASSWORD: postgres
      healthcheck:
        test: "pg_isready -d postgres -U postgres"
              
volumes:
    djam_static:
    db:
      name: djam_db
    rabbitmq:
      name: djam_rabbitmq