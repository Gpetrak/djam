version: '3'
services:

  rabbitmq_djam:
    container_name: rabbitmq_djam
    image: 'rabbitmq:3-management'
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  djam:
    container_name: djam
    build:
      context: ./
    image: djam:20240415
    restart: always
    env_file:
      - .env_docker
    ports:
    - "8001:8000"
    volumes:
      - djam_static:/djam/project/static
    environment:
      - DJAM_PROJECT_ENVIRONMENT=prod
      - DJAM_RABBITMQ_HOST=rabbitmq_djam
      - DJAM_RABBITMQ_PORT=5672
      - DJAM_DB_HOST=db
      - DJAM_DB_PORT=5432
      - DJAM_DB_NAME=djam
      - DJAM_DB_USER=djam
      - DJAM_DB_PASSWORD=${DJAM_DB_PASSWORD}
      - DJAM_STATIC_ROOT=/mnt/volumes/statics/static/
      - DJAM_EMAIL_HOST_USER=${DJAM_EMAIL_HOST_USER}
      - DJAM_EMAIL_HOST_PASSWORD=${DJAM_EMAIL_HOST_PASSWORD}
      - DJAM_EMAIL_HOST=${DJAM_EMAIL_HOST}
      - DJAM_EMAIL_SENDER=${DJAM_EMAIL_SENDER}
      - DJAM_EMAIL_PORT=${DJAM_EMAIL_PORT}
      - DJAM_SECRET_KEY=${DJAM_SECRET_KEY}
    depends_on:
      rabbitmq_djam:
        condition: service_healthy
      db:
        condition: service_healthy
  db:
    container_name: db
    restart: always
    build:
      context: ./deployment/postgres/
    env_file:
      - .env_docker
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: "pg_isready -d postgres -U postgres"
              
volumes:
    djam_static:
    db:
      name: djam_db
    rabbitmq_djam:
      name: djam_rabbitmq
